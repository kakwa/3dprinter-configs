var u=Object.defineProperty;var l=(a,e,r)=>e in a?u(a,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):a[e]=r;var i=(a,e,r)=>l(a,typeof e!="symbol"?e+"":e,r);import{m as p,C as d,f as _,R as f,j as v,k as h}from"./index-hdLon3e3.js";var y=Object.defineProperty,C=Object.getOwnPropertyDescriptor,m=(a,e,r,s)=>{for(var t=s>1?void 0:s?C(e,r):e,n=a.length-1,c;n>=0;n--)(c=a[n])&&(t=(s?c(e,r,t):c(t))||t);return s&&t&&y(e,r,t),t};let o=class extends p(d){constructor(){super(...arguments);i(this,"cameraVideo");i(this,"cameraVideoSource","")}get autoRaiseFrameEvent(){return!1}startPlayback(){try{this.updateStatus("connecting");const r=this.buildAbsoluteUrl(this.camera.stream_url||"").toString();this.cameraVideoSource=r,this.updateRawCameraUrl(r)}catch(r){_.error(`[IpstreamCamera] failed to start playback "${this.camera.name}"`,r)}}stopPlayback(){this.updateStatus("disconnected"),this.cameraVideoSource="",this.cameraVideo.src=""}};m([f("streamingElement")],o.prototype,"cameraVideo",2);o=m([v({})],o);var S=function(){var e=this,r=e._self._c;return e._self._setupProxy,r("video",{ref:"streamingElement",style:e.cameraStyle,attrs:{src:e.cameraVideoSource,autoplay:"",muted:"",crossorigin:e.crossorigin},domProps:{muted:!0},on:{play:function(s){return e.updateStatus("connected")},error:function(s){return e.updateStatus("error")}}})},P=[],b=h(o,S,P,!1,null,null);const R=b.exports;export{R as default};
